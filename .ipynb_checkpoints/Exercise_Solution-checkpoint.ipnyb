{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### PRACTICE EXERCISES' SOLUTIONS"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Use the \"practice_exercise_comp_sales_data\" CSV file for the exercise.\n",
    "\n",
    "df = pd.read_csv(\"https://raw.githubusercontent.com/rakeshsukumar/python_data_viz_training/master/Input/practice_exercise_comp_sales_data.csv\")\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Problem 1: \n",
    "##### 1. Read Total Gain of all months and plot it using a line plot. \n",
    "##### 2. Label the x axis as \"Month\" and Y axis as \"Total Gain\"\n",
    "##### 2. Title the plot as \"Company gain per month\""
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Problem 2: \n",
    "\n",
    "##### Get Total gain of all months and plot line plot. Plot must include following \"Style properties\" :\n",
    "\n",
    "##### 1. Line Style dotted and Line color should be grey\n",
    "##### 2. Show legend at the lower right location with label \"Profit data for last year\"\n",
    "##### 3. X label name = Month \n",
    "##### 4. Y label name = Sold units \n",
    "##### 5. Line width should be 2\n",
    "##### 6. Add a circle marker.\n",
    "##### 7. Line marker color as red"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Problem 3: \n",
    "\n",
    "##### Read total units sold per month data for all items and show it on the same plot with multiple lines\n",
    "\n",
    "##### 1. Line Style solid and Line colors can be anything\n",
    "##### 2. Show legend at the upper left location with corr labels \"item x sales data\", x being the item in question\n",
    "##### 3. X label name = Month \n",
    "##### 4. Y label name = Sold units \n",
    "##### 5. No marker\n",
    "##### 6. Ticks on y axis should be  from 200 to 3800 in the increments of 400"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Problem 4: \n",
    "\n",
    "#####  1. Compare Hair Conditioner and Whitening Cream sales using bar plots in the same chart\n",
    "##### 2. Add a grid in the plot with gridstyle as “–.“\n",
    "##### 3. Pick appropriate width for the barplot so they dont touch across months\n",
    "##### 4. Upper right legend with labels for Hair conditioner and whitening cream. Make sure bars dont get covered by legends\n",
    "##### 5. Title the plot as \"Whitening Cream sales VS Hair conditioner sales\"\n",
    "##### 6. Save this plot as CreamvsConditioner.png and save it with a dpi of 200\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Problem 5: \n",
    "\n",
    "#### 1. Two time series plots on same axes, one for product sales in units and one for total sales in units\n",
    "#### 2. Color for Total units should be orange in all plots\n",
    "#### 3. Multiple subplots with common x axis (month) for different product units comparison with total units\n",
    "#### 4. Color for products should be from colors 'bgrmcy' \n",
    "#### 5. Different y-axes for Product units (same colors respectively and Total units color label as orange. \n",
    "#### 6. Legends for both product and total units in visible area\n",
    "#### 7. Single plot title as \"\"Monthly Product units compared with Total units\""
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Problem 6: \n",
    "\n",
    "#### 1. Plot monthly mean sales as bar charts for all products in same plot\n",
    "#### 2. Add error bars using standard dev for each bar\n",
    "#### 3. Plot legend in the best possible position\n",
    "#### 4. Choose the plot style as seaborn\n",
    "#### 5. Annotate for the product having largest variation (least consistent mothly sales) in 12 months as :Largest variation in units\"\n",
    "#### 6. Keep x-label, y-label, Annotation text and Bar labels font size as 12"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Problem 7 - Out of Syllabus question\n",
    "#### Read all product sales data and show it using a stack plot\n",
    "#### The plot should look like below\n",
    "\n",
    "https://raw.githubusercontent.com/rakeshsukumar/python_data_viz_training/master/stackplot.png"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Problem 8\n",
    "#### Using Seaborn create the following visualizations for Titanic Dataset. You can load the dataset using the below command. There could be more than one correct ways of visualizing data.\n",
    "\n",
    "import seaborn as sns\n",
    "titanic = sns.load_dataset('titanic')\n",
    "\n",
    "#### 1.  Create a visualization to visualize age of all male and female passengers. Visualization should show the outliers. Annotate (call out in the plot) the oldest male."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### 2. Create a seaborn plot that shows central tendency of \"age\" (mean and Standard dev) for different \"class\" of boarding and comparing them for \"embark_town\". Find out where the age demography is most varied"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### 3. Explore if there is a linear relationship between the class and the fare_paid\n",
    "#### Remove outliers on age and fare"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### 4. Using Seaborn, for the titanic dataset depict if there is a correlation between survival ,age and whether they were alone or with somebody \"alone\""
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## End of practice exercise"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.6"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
